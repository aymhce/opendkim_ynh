#!/bin/bash
app=opendkim

# Retrieve arguments
domain=$1
#path=$2
#admin=$3
#is_public=$4

#Â Save app settings
#sudo yunohost app setting $app admin -v "$admin"
#sudo yunohost app setting $app is_public -v "$is_public"

# Check domain/path availability
#sudo yunohost app checkurl $domain -a $app
#if [[ ! $? -eq 0 ]]; then
#    exit 1
#fi

# Installation of base apps
sudo apt-get update
sudo apt-get install opendkim opendkim-tools

# Connecting the opendkim milter to postfix
sudo cat ../conf/etc_default_opendkim >> /etc/default/opendkim

# Configure postfix to use this milter 
sudo cat ../conf/etc_postfix_main.cf >> /etc/postfix/main.cf

# Configuration of opendkim 
sudo cp -a ../conf/opendkim.conf /etc/
sudo mkdir -pv /etc/opendkim/keys/$domain

# Trusted Hosts
sudo cp -a ../conf/TrustedHosts /etc/opendkim/
sudo echo "*.$domain" > /etc/opendkim/TrustedHosts

# Create a key table
sudo echo "mail._domainkey.$domain $domain:mail:/etc/opendkim/keys/$domain/mail.private" > /etc/opendkim/KeyTable

# Creation of a signing table
sudo echo "*@$domain mail._domainkey.$domain" > /etc/opendkim/SigningTable

# Generation of keys
sudo opendkim-genkey -D /etc/opendkim/keys/$domain/ -s mail -d $domain

# Right parameters to the files created 
sudo chown -Rv opendkim:opendkim /etc/opendkim*

# Restart services
sudo service opendkim restart
sudo service postfix reload
sudo yunohost app ssowatconf
